<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	
	<!-- =======================================Action======================================= -->
	
	<!-- Action对象必须配置成prototype！！！！ -->
	<!-- 配置UserAction -->
	<bean name="userAction" class="com.company.web.action.UserAction" scope="prototype">
		<!-- 注入userService -->
		<property name="userService" ref="userService"></property>
	</bean>
	
	<!-- 配置CustomerAction -->
	<bean name="customerAction" class="com.company.web.action.CustomerAction" scope="prototype">
		<!-- 注入customerService -->
		<property name="customerService" ref="customerService"></property>
	</bean>
	
	<!-- 配置BaseDictAction -->
	<bean name="baseDictAction" class="com.company.web.action.BaseDictAction" scope="prototype">
		<!-- 注入baseDictService -->
		<property name="baseDictService" ref="baseDictService"></property>
	</bean>
	
	<!-- 配置LinkManAction -->
	<bean name="linkManAction" class="com.company.web.action.LinkManAction" scope="prototype">
		<!-- 注入saleVisitService -->
		<property name="linkManService" ref="linkManService"></property>
	</bean>
	
	<!-- 配置SaleVisitAction -->
	<bean name="saleVisitAction" class="com.company.web.action.SaleVisitAction" scope="prototype">
		<!-- 注入saleVisitService -->
		<property name="saleVisitService" ref="saleVisitService"></property>
	</bean>
	
	<!-- =======================================Service======================================= -->
	
	<!-- 配置UserServiceImpl -->
	<bean name="userService" class="com.company.service.impl.UserServiceImpl">
		<!-- 注入userDao -->
		<property name="userDao" ref="userDao"></property>
	</bean>
	<!-- 配置CustomerServiceImpl -->
	<bean name="customerService" class="com.company.service.impl.CustomerServiceImpl">
		<!-- 注入customerDao -->
		<property name="customerDao" ref="customerDao"></property>
	</bean>
	
	<!-- 配置BaseDictServiceImpl -->
	<bean name="baseDictService" class="com.company.service.impl.BaseDictServiceImpl">
		<!-- 注入baseDictDao -->
		<property name="baseDictDao" ref="baseDictDao"></property>
	</bean>
	
	<!-- 配置LinkManServiceImpl -->
	<bean name="linkManService" class="com.company.service.impl.LinkManServiceImpl">
		<!-- 注入linkManDao -->
		<property name="linkManDao" ref="linkManDao"></property>
	</bean>
	
	<!-- 配置SaleVisitServiceImpl -->
	<bean name="saleVisitService" class="com.company.service.impl.SaleVisitServiceImpl">
		<!-- 注入saleVisitDao -->
		<property name="saleVisitDao" ref="saleVisitDao"></property>
	</bean>
	
	<!-- =======================================Dao======================================= -->
	
	<!-- 配置UserDaoImpl -->
	<bean name="userDao" class="com.company.dao.impl.UserDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置CustomerDaoImpl -->
	<bean name="customerDao" class="com.company.dao.impl.CustomerDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置BaseDictDaoImpl -->
	<bean name="baseDictDao" class="com.company.dao.impl.BaseDictDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置LinkManDaoImpl -->
	<bean name="linkManDao" class="com.company.dao.impl.LinkManDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置SaleVisitDaoImpl -->
	<bean name="saleVisitDao" class="com.company.dao.impl.SaleVisitDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- =======================================SessionFactory====================================== -->
	
	<!-- 配置sessionFactory -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" scope="singleton">
		<!-- 注入configLocation属性值 -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<!-- 将dataSource连接池注入，sessionFactory依赖于连接池！ -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 将连接数据库的四大参数注入。 -->
		<!-- 注意！！！此时要将Hibernate中的四大参数删除！！ -->
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql:///crm"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123"></property>
	</bean>
	
	<!-- =======================================AOP事务======================================= -->
	
	<!-- 配置核心事务管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入sessinoFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 以方法为单位配置通知属性 :事务的隔离级别、是否只读、事务的传播行为-->
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
			<tx:method name="persist*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
			<tx:method name="update*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
			<tx:method name="modify*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
			<tx:method name="delete*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
			<tx:method name="remove*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
			<tx:method name="get*" isolation="REPEATABLE_READ" read-only="true" propagation="REQUIRED"/>
			<tx:method name="find*" isolation="REPEATABLE_READ" read-only="true" propagation="REQUIRED"/>
			<tx:method name="*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 将通知织入目标对象 -->
	<aop:config>
		<!-- 配置切点 -->
		<aop:pointcut expression="execution(* com.company.service.impl.*ServiceImpl.*(..))" id="txPc"/>
		<!-- 配置切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
	</aop:config>
	
	

</beans>